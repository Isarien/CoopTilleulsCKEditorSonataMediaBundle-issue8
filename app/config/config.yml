imports:
  - { resource: parameters.yml }
  - { resource: security.yml }

framework:
  secret:          "%secret%"
  router:
    resource: "%kernel.root_dir%/config/routing.yml"
    strict_requirements: ~
  form:            ~
  csrf_protection: ~
  validation:      { enable_annotations: true }
  templating:
    engines: ['twig']
        #assets_version: SomeVersionScheme
  default_locale:  "%locale%"
  trusted_hosts:   ~
  trusted_proxies: ~
  session:
        # handler_id set to null will use default session handler from php.ini
    handler_id:  ~
  fragments:       ~
  http_method_override: true

# Twig Configuration
twig:
  debug:            "%kernel.debug%"
  strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
  debug:          "%kernel.debug%"
  use_controller: false
  bundles:        [ ]
    #java: /usr/bin/java
  filters:
    cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Swiftmailer Configuration
swiftmailer:
  transport: "%mailer_transport%"
  host:      "%mailer_host%"
  username:  "%mailer_user%"
  password:  "%mailer_password%"
  spool:     { type: memory }
  
ivory_ck_editor:
  default_config: default
  configs:
    default:
      filebrowserBrowseRoute: admin_sonata_media_media_browser
      filebrowserImageBrowseRoute: admin_sonata_media_media_browser
            # Display images by default when clicking the image dialog browse button
      filebrowserImageBrowseRouteParameters:
        provider: sonata.media.provider.image
      filebrowserUploadRoute: admin_sonata_media_media_upload
      filebrowserUploadRouteParameters:
        provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
      filebrowserImageUploadRoute: admin_sonata_media_media_upload
      filebrowserImageUploadRouteParameters:
        provider: sonata.media.provider.image
        context: my-context # Optional, to upload in a custom context  

sonata_block:
  default_contexts: [cms]
  blocks:
    # Enable the SonataAdminBundle block
    sonata.admin.block.admin_list:
      contexts:   [admin]
doctrine:
  orm:
    entity_managers:
      default:
        mappings:
          ApplicationSonataMediaBundle: ~   
          SonataMediaBundle: ~
  dbal:
    driver:   "%database_driver%"
    host:     "%database_host%"
    port:     "%database_port%"
    dbname:   "%database_name%"
    user:     "%database_user%"
    password: "%database_password%"
    charset:  UTF8
    types:
      json: Sonata\Doctrine\Types\JsonType     
            
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
  default_context: default
  db_driver: doctrine_orm 
  contexts:
    default:  # the default context is mandatory
      providers:
        - sonata.media.provider.dailymotion
        - sonata.media.provider.youtube
        - sonata.media.provider.image
        - sonata.media.provider.file

      formats:
        small: { width: 100 , quality: 70}
        big:   { width: 500 , quality: 70}

  cdn:
    server:
      path: /uploads/media # http://media.sonata-project.org/

  filesystem:
    local:
      directory:  %kernel.root_dir%/../web/uploads/media
      create:     false   
  providers:
    image:
      resizer: sonata.media.resizer.square   
      
      